{
  "schema_version": "1.0.0",
  "namespaces": [
    {
      "name": "Vaadin.ColorPicker",
      "description": "",
      "summary": "",
      "sourceRange": {
        "file": "src/palette/color-picker-color-picker-palette.html",
        "start": {
          "line": 75,
          "column": 6
        },
        "end": {
          "line": 75,
          "column": 42
        }
      },
      "elements": [
        {
          "description": "`<responsive-canvas>` is a wrapper for the `<canvas>` element that will automatically set\nthe `width` and `height` attribute of the canvas if it is resized.",
          "summary": "",
          "path": "src/components/color-picker-responsive-canvas.html",
          "properties": [
            {
              "name": "renderCallback",
              "type": "Function | null | undefined",
              "description": "The callback that is used to render the content of the canvas.\nShould be a method handling the `canvas` as an argument: `function render(canvas)`.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 64,
                  "column": 12
                },
                "end": {
                  "line": 64,
                  "column": 36
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Function"
                }
              }
            },
            {
              "name": "_canvas",
              "type": "Object | null | undefined",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 68,
                  "column": 12
                },
                "end": {
                  "line": 71,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true,
                  "attributeType": "Object"
                }
              }
            },
            {
              "name": "_width",
              "type": "number | null | undefined",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 75,
                  "column": 12
                },
                "end": {
                  "line": 75,
                  "column": 26
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              }
            },
            {
              "name": "_height",
              "type": "number | null | undefined",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 79,
                  "column": 12
                },
                "end": {
                  "line": 79,
                  "column": 27
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              }
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 86,
                  "column": 8
                },
                "end": {
                  "line": 91,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "connectedCallback",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 96,
                  "column": 8
                },
                "end": {
                  "line": 108,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "disconnectedCallback",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 113,
                  "column": 8
                },
                "end": {
                  "line": 116,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_refreshCanvas",
              "description": "Refreshes the canvas by re-setting its size and re-rendering it.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 123,
                  "column": 8
                },
                "end": {
                  "line": 126,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_refreshCanvasSize",
              "description": "Re-sets the size of the canvas.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 133,
                  "column": 8
                },
                "end": {
                  "line": 136,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "renderCanvas",
              "description": "Renders the canvas using the provided `renderCallback`.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 141,
                  "column": 8
                },
                "end": {
                  "line": 145,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 43,
              "column": 6
            },
            "end": {
              "line": 146,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.ColorPicker.ResponsiveCanvasElement",
          "attributes": [
            {
              "name": "render-callback",
              "description": "The callback that is used to render the content of the canvas.\nShould be a method handling the `canvas` as an argument: `function render(canvas)`.",
              "sourceRange": {
                "start": {
                  "line": 64,
                  "column": 12
                },
                "end": {
                  "line": 64,
                  "column": 36
                }
              },
              "metadata": {},
              "type": "Function | null | undefined"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [
            {
              "description": "",
              "name": "",
              "range": {
                "start": {
                  "line": 28,
                  "column": 4
                },
                "end": {
                  "line": 28,
                  "column": 17
                }
              }
            }
          ],
          "tagname": "responsive-canvas",
          "mixins": [
            "Vaadin.ElementMixin",
            "Vaadin.ThemableMixin",
            "Vaadin.DisabledPropertyMixin"
          ]
        },
        {
          "description": "`ColorSliderElement` is an extendable base class for all sliders regarding color.\n\nIt allows to specify a render function to render the sliders background.",
          "summary": "",
          "path": "src/slider/color-picker-color-slider.html",
          "properties": [
            {
              "name": "focusElement",
              "type": "(* | Vaadin.ColorPicker.ColorSliderElement)",
              "description": "The element to focus.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 421,
                  "column": 8
                },
                "end": {
                  "line": 423,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              }
            },
            {
              "name": "enableX",
              "type": "boolean | null | undefined",
              "description": "Enable the possibility to move the handle in the X-direction.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 96,
                  "column": 12
                },
                "end": {
                  "line": 99,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "true"
            },
            {
              "name": "enableY",
              "type": "boolean | null | undefined",
              "description": "Enable the possibility to move the handle in the Y-direction.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 103,
                  "column": 12
                },
                "end": {
                  "line": 106,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "valueX",
              "type": "number | null | undefined",
              "description": "The current X-value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 110,
                  "column": 12
                },
                "end": {
                  "line": 114,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0"
            },
            {
              "name": "valueY",
              "type": "number | null | undefined",
              "description": "The current Y-value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 118,
                  "column": 12
                },
                "end": {
                  "line": 122,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0"
            },
            {
              "name": "minX",
              "type": "number | null | undefined",
              "description": "The lower bound of the X-value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 126,
                  "column": 12
                },
                "end": {
                  "line": 129,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0"
            },
            {
              "name": "minY",
              "type": "number | null | undefined",
              "description": "The lower bound of the Y-value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 133,
                  "column": 12
                },
                "end": {
                  "line": 136,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0"
            },
            {
              "name": "maxX",
              "type": "number | null | undefined",
              "description": "The upper bound of the X-value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 140,
                  "column": 12
                },
                "end": {
                  "line": 143,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "100"
            },
            {
              "name": "maxY",
              "type": "number | null | undefined",
              "description": "The upper bound of the Y-value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 147,
                  "column": 12
                },
                "end": {
                  "line": 150,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "100"
            },
            {
              "name": "stepX",
              "type": "number | null | undefined",
              "description": "The steps that are added and removed to the current X-value if the slider handle is\nmoved.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 155,
                  "column": 12
                },
                "end": {
                  "line": 158,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            },
            {
              "name": "stepY",
              "type": "number | null | undefined",
              "description": "The steps that are added and removed to the current Y-value if the slider handle is\nmoved.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 163,
                  "column": 12
                },
                "end": {
                  "line": 166,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            },
            {
              "name": "renderCallback",
              "type": "Function | null | undefined",
              "description": "The callback that is used to render the sliders background.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 170,
                  "column": 12
                },
                "end": {
                  "line": 170,
                  "column": 36
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Function"
                }
              }
            },
            {
              "name": "_canvas",
              "type": "Object | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 171,
                  "column": 12
                },
                "end": {
                  "line": 174,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true,
                  "attributeType": "Object"
                }
              }
            },
            {
              "name": "_handle",
              "type": "Object | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 175,
                  "column": 12
                },
                "end": {
                  "line": 178,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true,
                  "attributeType": "Object"
                }
              }
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 185,
                  "column": 8
                },
                "end": {
                  "line": 196,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "connectedCallback",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 201,
                  "column": 8
                },
                "end": {
                  "line": 204,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "renderCanvas",
              "description": "Render the sliders background on the canvas.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 209,
                  "column": 8
                },
                "end": {
                  "line": 211,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "onResize",
              "description": "Repositions the handler if resized.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 216,
                  "column": 8
                },
                "end": {
                  "line": 219,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_setupHandle",
              "description": "Setup the handle.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 225,
                  "column": 8
                },
                "end": {
                  "line": 325,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_invertedX",
              "description": "Check if the upper bound is smaller than the lower bound on the X-axis.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 332,
                  "column": 8
                },
                "end": {
                  "line": 334,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "boolean"
              }
            },
            {
              "name": "_invertedY",
              "description": "Check if the upper bound is smaller than the lower bound on the Y-axis.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 341,
                  "column": 8
                },
                "end": {
                  "line": 343,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "boolean"
              }
            },
            {
              "name": "_increaseX",
              "description": "Increase the x-value depending on the fact whether the X-axis is inverted.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 349,
                  "column": 8
                },
                "end": {
                  "line": 355,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_decreaseX",
              "description": "Decrease the x-value depending on the fact whether the X-axis is inverted.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 361,
                  "column": 8
                },
                "end": {
                  "line": 367,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_increaseY",
              "description": "Increase the x-value depending on the fact whether the Y-axis is inverted.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 373,
                  "column": 8
                },
                "end": {
                  "line": 379,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_decreaseY",
              "description": "Decrease the x-value depending on the fact whether the Y-axis is inverted.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 385,
                  "column": 8
                },
                "end": {
                  "line": 391,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_valueXChanged",
              "description": "Reposition the handle if the X-value changed.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 398,
                  "column": 8
                },
                "end": {
                  "line": 403,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value",
                  "description": "the new value."
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_valueYChanged",
              "description": "Reposition the handle if the Y-value changed.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 410,
                  "column": 8
                },
                "end": {
                  "line": 415,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value",
                  "description": "the new value."
                }
              ],
              "return": {
                "type": "void"
              }
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 424,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.ColorPicker.ColorSliderElement",
          "attributes": [
            {
              "name": "enable-x",
              "description": "Enable the possibility to move the handle in the X-direction.",
              "sourceRange": {
                "start": {
                  "line": 96,
                  "column": 12
                },
                "end": {
                  "line": 99,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "enable-y",
              "description": "Enable the possibility to move the handle in the Y-direction.",
              "sourceRange": {
                "start": {
                  "line": 103,
                  "column": 12
                },
                "end": {
                  "line": 106,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "value-x",
              "description": "The current X-value.",
              "sourceRange": {
                "start": {
                  "line": 110,
                  "column": 12
                },
                "end": {
                  "line": 114,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "value-y",
              "description": "The current Y-value.",
              "sourceRange": {
                "start": {
                  "line": 118,
                  "column": 12
                },
                "end": {
                  "line": 122,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "min-x",
              "description": "The lower bound of the X-value.",
              "sourceRange": {
                "start": {
                  "line": 126,
                  "column": 12
                },
                "end": {
                  "line": 129,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "min-y",
              "description": "The lower bound of the Y-value.",
              "sourceRange": {
                "start": {
                  "line": 133,
                  "column": 12
                },
                "end": {
                  "line": 136,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "max-x",
              "description": "The upper bound of the X-value.",
              "sourceRange": {
                "start": {
                  "line": 140,
                  "column": 12
                },
                "end": {
                  "line": 143,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "max-y",
              "description": "The upper bound of the Y-value.",
              "sourceRange": {
                "start": {
                  "line": 147,
                  "column": 12
                },
                "end": {
                  "line": 150,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "step-x",
              "description": "The steps that are added and removed to the current X-value if the slider handle is\nmoved.",
              "sourceRange": {
                "start": {
                  "line": 155,
                  "column": 12
                },
                "end": {
                  "line": 158,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "step-y",
              "description": "The steps that are added and removed to the current Y-value if the slider handle is\nmoved.",
              "sourceRange": {
                "start": {
                  "line": 163,
                  "column": 12
                },
                "end": {
                  "line": 166,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "render-callback",
              "description": "The callback that is used to render the sliders background.",
              "sourceRange": {
                "start": {
                  "line": 170,
                  "column": 12
                },
                "end": {
                  "line": 170,
                  "column": 36
                }
              },
              "metadata": {},
              "type": "Function | null | undefined"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "value-x-changed",
              "description": "Fired when the `valueX` property changes.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "value-y-changed",
              "description": "Fired when the `valueY` property changes.",
              "metadata": {}
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "color-slider",
          "mixins": [
            "Vaadin.ElementMixin",
            "Vaadin.ThemableMixin",
            "Vaadin.DisabledPropertyMixin",
            "Polymer.IronResizableBehavior"
          ]
        },
        {
          "description": "`<sl-slider>` is an element that allows to select a **saturation** and **lightness** value\nfrom the hsv color space using a slider.",
          "summary": "",
          "path": "src/slider/color-picker-sl-slider.html",
          "properties": [
            {
              "name": "hue",
              "type": "number | null | undefined",
              "description": "The **h**sv-hue of the color to show as background in the range `[0 - 360]`.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 29,
                  "column": 12
                },
                "end": {
                  "line": 32,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0"
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 58,
                  "column": 8
                },
                "end": {
                  "line": 61,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_renderSl",
              "description": "The render callback for the background.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 68,
                  "column": 8
                },
                "end": {
                  "line": 90,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "Function"
              }
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 12,
              "column": 6
            },
            "end": {
              "line": 91,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.ColorPicker.SlSliderElement",
          "attributes": [
            {
              "name": "hue",
              "description": "The **h**sv-hue of the color to show as background in the range `[0 - 360]`.",
              "sourceRange": {
                "start": {
                  "line": 29,
                  "column": 12
                },
                "end": {
                  "line": 32,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "sl-slider"
        },
        {
          "description": "`<hue-slider>` is an element that allows to select a **hue** value using a slider.",
          "summary": "",
          "path": "src/slider/color-picker-hue-slider.html",
          "properties": [],
          "methods": [
            {
              "name": "_renderHue",
              "description": "The render callback for the background.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 42,
                  "column": 8
                },
                "end": {
                  "line": 57,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "Function"
              }
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 11,
              "column": 6
            },
            "end": {
              "line": 58,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.ColorPicker.HueSliderElement",
          "attributes": [],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "hue-slider"
        },
        {
          "description": "`<alpha-slider>` is an element that allows to select an **alpha** value using a slider.",
          "summary": "",
          "path": "src/slider/color-picker-alpha-slider.html",
          "properties": [
            {
              "name": "hue",
              "type": "number | null | undefined",
              "description": "The **h**sv-hue of the color to show as background in the range `[0 - 360]`.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 28,
                  "column": 12
                },
                "end": {
                  "line": 31,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0"
            },
            {
              "name": "value",
              "type": "number | null | undefined",
              "description": "The hs**v**-value of the color to show as background in the range `[0 - 1]`.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 35,
                  "column": 12
                },
                "end": {
                  "line": 38,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 58,
                  "column": 8
                },
                "end": {
                  "line": 63,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_renderAlpha",
              "description": "The render callback for the background depending on the current hue.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 70,
                  "column": 8
                },
                "end": {
                  "line": 85,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "Function"
              }
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 12,
              "column": 6
            },
            "end": {
              "line": 86,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.ColorPicker.AlphaSliderElement",
          "attributes": [
            {
              "name": "hue",
              "description": "The **h**sv-hue of the color to show as background in the range `[0 - 360]`.",
              "sourceRange": {
                "start": {
                  "line": 28,
                  "column": 12
                },
                "end": {
                  "line": 31,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "value",
              "description": "The hs**v**-value of the color to show as background in the range `[0 - 1]`.",
              "sourceRange": {
                "start": {
                  "line": 35,
                  "column": 12
                },
                "end": {
                  "line": 38,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "alpha-slider"
        },
        {
          "description": "`<selected-color>` shows a selected color. If a previous color is specified, this one will\nbe also visible.",
          "summary": "",
          "path": "src/slider/color-picker-selected-color.html",
          "properties": [
            {
              "name": "previousValue",
              "type": "Object | null | undefined",
              "description": "The previous value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 100,
                  "column": 12
                },
                "end": {
                  "line": 103,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_previousValueChanged\"",
                  "attributeType": "Object"
                }
              }
            },
            {
              "name": "hasPreviousValue",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 104,
                  "column": 12
                },
                "end": {
                  "line": 108,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true,
                  "attributeType": "Boolean"
                }
              }
            },
            {
              "name": "_previousIcon",
              "type": "Object | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 109,
                  "column": 12
                },
                "end": {
                  "line": 109,
                  "column": 33
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Object"
                }
              }
            },
            {
              "name": "_halo",
              "type": "Object | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 110,
                  "column": 12
                },
                "end": {
                  "line": 110,
                  "column": 25
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Object"
                }
              }
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 114,
                  "column": 8
                },
                "end": {
                  "line": 118,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_previousValueChanged",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 123,
                  "column": 8
                },
                "end": {
                  "line": 128,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_showSelectPreviousValue",
              "description": "Check if a value is set for the previous value.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 135,
                  "column": 8
                },
                "end": {
                  "line": 138,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "boolean"
              }
            },
            {
              "name": "_renderSelectedColor",
              "description": "Callback to render the selected color.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 145,
                  "column": 8
                },
                "end": {
                  "line": 149,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "Function"
              }
            },
            {
              "name": "_renderPreviousColor",
              "description": "Callback to render the previous color.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 156,
                  "column": 8
                },
                "end": {
                  "line": 160,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "Function"
              }
            },
            {
              "name": "_resetToPreviousValue",
              "description": "Reset the value to the previous value.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 166,
                  "column": 8
                },
                "end": {
                  "line": 168,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            }
          ],
          "staticMethods": [
            {
              "name": "_renderColor",
              "description": "Render a color to a canvas.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 177,
                  "column": 8
                },
                "end": {
                  "line": 190,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "canvas",
                  "description": "The canvas to show the color in."
                },
                {
                  "name": "color",
                  "description": "The color to show in the format of a valid\n[TinyColor](https://github.com/bgrins/TinyColor|TinyColor) color"
                }
              ],
              "return": {
                "type": "void"
              }
            }
          ],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 6
            },
            "end": {
              "line": 191,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.ColorPicker.SelectedColorElement",
          "attributes": [
            {
              "name": "previous-value",
              "description": "The previous value.",
              "sourceRange": {
                "start": {
                  "line": 100,
                  "column": 12
                },
                "end": {
                  "line": 103,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "Object | null | undefined"
            },
            {
              "name": "has-previous-value",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 104,
                  "column": 12
                },
                "end": {
                  "line": 108,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "selected-color",
          "mixins": [
            "Vaadin.ElementMixin",
            "Vaadin.ThemableMixin",
            "Vaadin.DisabledPropertyMixin",
            "Vaadin.ColorPicker.HasColorValueMixin"
          ]
        },
        {
          "description": "`<color-picker-slider>` allows to select a color from sliders.",
          "summary": "",
          "path": "src/slider/color-picker-color-picker-slider.html",
          "properties": [
            {
              "name": "previousValue",
              "type": "Object | null | undefined",
              "description": "The previous value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 85,
                  "column": 12
                },
                "end": {
                  "line": 85,
                  "column": 33
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Object"
                }
              }
            },
            {
              "name": "disableAlpha",
              "type": "boolean | null | undefined",
              "description": "Disable the input of **alpha** values.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 89,
                  "column": 12
                },
                "end": {
                  "line": 92,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "stepAlpha",
              "type": "number | null | undefined",
              "description": "Allowed number o intervals on the **alpha** value",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 96,
                  "column": 12
                },
                "end": {
                  "line": 99,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0.01"
            },
            {
              "name": "stepHsl",
              "type": "number | null | undefined",
              "description": "Allowed number o intervals on the **hsl** value",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 103,
                  "column": 12
                },
                "end": {
                  "line": 106,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            },
            {
              "name": "_hue",
              "type": "number | null | undefined",
              "description": "The current hue in the range `[0 - 360]`.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 110,
                  "column": 12
                },
                "end": {
                  "line": 114,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_sliderColorChanged\"",
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0"
            },
            {
              "name": "_saturation",
              "type": "number | null | undefined",
              "description": "The current saturation in the range `[0 - 1]`.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 118,
                  "column": 12
                },
                "end": {
                  "line": 122,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_sliderColorChanged\"",
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            },
            {
              "name": "_value",
              "type": "number | null | undefined",
              "description": "The current value in the range `[0 - 1]`.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 126,
                  "column": 12
                },
                "end": {
                  "line": 130,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_sliderColorChanged\"",
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            },
            {
              "name": "_alpha",
              "type": "number | null | undefined",
              "description": "The current alpha in the range `[0 - 1]`.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 134,
                  "column": 12
                },
                "end": {
                  "line": 138,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_sliderColorChanged\"",
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 145,
                  "column": 8
                },
                "end": {
                  "line": 148,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_sliderColorChanged",
              "description": "Update the color value if the slider values changed.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 154,
                  "column": 8
                },
                "end": {
                  "line": 158,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_valueChanged",
              "description": "Update the slider values if the color value changed.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 164,
                  "column": 8
                },
                "end": {
                  "line": 179,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_colorChanged",
              "description": "Prevent endless recursion.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 186,
                  "column": 8
                },
                "end": {
                  "line": 192,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "updateAction"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_stepSl",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 194,
                  "column": 8
                },
                "end": {
                  "line": 196,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 197,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.ColorPicker.ColorPickerSliderElement",
          "attributes": [
            {
              "name": "previous-value",
              "description": "The previous value.",
              "sourceRange": {
                "start": {
                  "line": 85,
                  "column": 12
                },
                "end": {
                  "line": 85,
                  "column": 33
                }
              },
              "metadata": {},
              "type": "Object | null | undefined"
            },
            {
              "name": "disable-alpha",
              "description": "Disable the input of **alpha** values.",
              "sourceRange": {
                "start": {
                  "line": 89,
                  "column": 12
                },
                "end": {
                  "line": 92,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "step-alpha",
              "description": "Allowed number o intervals on the **alpha** value",
              "sourceRange": {
                "start": {
                  "line": 96,
                  "column": 12
                },
                "end": {
                  "line": 99,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "step-hsl",
              "description": "Allowed number o intervals on the **hsl** value",
              "sourceRange": {
                "start": {
                  "line": 103,
                  "column": 12
                },
                "end": {
                  "line": 106,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "color-picker-slider",
          "mixins": [
            "Vaadin.ElementMixin",
            "Vaadin.ThemableMixin",
            "Vaadin.DisabledPropertyMixin",
            "Vaadin.ColorPicker.HasColorValueMixin"
          ]
        },
        {
          "description": "`<element-carousel>` allows to switch between elements and display one of them at a time.\nAdditionally all elements can be displayed at once.\n\n```\n<element-carousel>\n  <div>Content 1</div>\n  <div>Content 2</div>\n  <div>Content 3</div>\n<element-carousel>\n```\n\nIf an element has the attribute `disable-for-switch` it will be hidden and ignored in the\ncarousel. This is useful if using the e.g. with `<dom-repeat>` as it is rendered inside\nthe carousel.\n\n```\n<element-carousel>\n  <dom-repeat items=\"{{items}}\" disable-for-switch>\n    <template>\n      <div>[[index]]</div>\n    </template>\n  </dom-repeat>\n<element-carousel>\n```",
          "summary": "",
          "path": "src/components/color-picker-element-carousel.html",
          "properties": [
            {
              "name": "pinned",
              "type": "boolean | null | undefined",
              "description": "Switch between showing all elements at once or just a single element.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 83,
                  "column": 12
                },
                "end": {
                  "line": 87,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_refreshElementVisibility\"",
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "displayedElementIndex",
              "type": "number | null | undefined",
              "description": "The index of the currently displayed element.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 91,
                  "column": 12
                },
                "end": {
                  "line": 96,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "readOnly": true,
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0"
            },
            {
              "name": "_slotElements",
              "type": "Array | null | undefined",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 100,
                  "column": 12
                },
                "end": {
                  "line": 103,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_refreshElementVisibility\"",
                  "attributeType": "Array"
                }
              }
            },
            {
              "name": "_showSwitchButton",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 107,
                  "column": 12
                },
                "end": {
                  "line": 110,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            }
          ],
          "methods": [
            {
              "name": "connectedCallback",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 117,
                  "column": 8
                },
                "end": {
                  "line": 139,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "disconnectedCallback",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 144,
                  "column": 8
                },
                "end": {
                  "line": 149,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_refreshElementVisibility",
              "description": "Refreshes the visibility of the elements.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 156,
                  "column": 8
                },
                "end": {
                  "line": 158,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_displayIndex",
              "description": "Try to display the element at the given index.\nIf the element at the index is not relevant, increase the index until an element to be\ndisplayed is found.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 168,
                  "column": 8
                },
                "end": {
                  "line": 192,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "index",
                  "description": "The index of the element to display"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_isElementRelevant",
              "description": "Check if an element is enabled for the carousel.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 201,
                  "column": 8
                },
                "end": {
                  "line": 203,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "element",
                  "description": "The element to check"
                }
              ],
              "return": {
                "type": "boolean",
                "desc": "`true` if the element is relevant, `false` else"
              }
            },
            {
              "name": "_displayNextElement",
              "description": "Shows the next element in the carousel.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 209,
                  "column": 8
                },
                "end": {
                  "line": 211,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 212,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.ColorPicker.ElementCarouselElement",
          "attributes": [
            {
              "name": "pinned",
              "description": "Switch between showing all elements at once or just a single element.",
              "sourceRange": {
                "start": {
                  "line": 83,
                  "column": 12
                },
                "end": {
                  "line": 87,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "displayed-element-index",
              "description": "The index of the currently displayed element.",
              "sourceRange": {
                "start": {
                  "line": 91,
                  "column": 12
                },
                "end": {
                  "line": 96,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "displayed-element-index-changed",
              "description": "Fired when the `displayedElementIndex` property changes.",
              "metadata": {}
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [
            {
              "description": "",
              "name": "",
              "range": {
                "start": {
                  "line": 23,
                  "column": 6
                },
                "end": {
                  "line": 23,
                  "column": 52
                }
              }
            }
          ],
          "tagname": "element-carousel",
          "mixins": [
            "Vaadin.ElementMixin",
            "Vaadin.ThemableMixin",
            "Vaadin.DisabledPropertyMixin"
          ]
        },
        {
          "description": "`ColorInputElement` is an extendable base class for all inputs regarding color.\n\nIt handles the setting and converting the value from the input and from\noutside without causing stack overflows due to endless recursions.",
          "summary": "",
          "path": "src/input/color-picker-color-input.html",
          "properties": [
            {
              "name": "_colorSupplier",
              "type": "Function | null | undefined",
              "description": "The supplier function that is called if one of the `_observedInputProperties` is\nchanged and the `value` property should be updated.\n\nShould return a valid [TinyColor](https://github.com/bgrins/TinyColor|TinyColor)\ncolor, e.g.:\n\n```() => tinycolor('rgb(255, 255, 255)')```",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 48,
                  "column": 12
                },
                "end": {
                  "line": 48,
                  "column": 36
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Function"
                }
              }
            },
            {
              "name": "_toInputConverter",
              "type": "Function | null | undefined",
              "description": "The converter function that is called if the `value` property changed and the inputs\nshould be updated.\n\nShould consume the [tinycolor](https://github.com/bgrins/TinyColor|TinyColor) `value`\nas an argument, e.g.:\n\n```value => console.info(value)```",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 60,
                  "column": 12
                },
                "end": {
                  "line": 60,
                  "column": 39
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Function"
                }
              }
            },
            {
              "name": "_observedInputProperties",
              "type": "Array | null | undefined",
              "description": "The properties that should trigger a call to `_colorSupplier` as the color has\nchanged from the input side.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 67,
                  "column": 12
                },
                "end": {
                  "line": 70,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Array"
                }
              },
              "defaultValue": "[]"
            },
            {
              "name": "disableAlpha",
              "type": "boolean | null | undefined",
              "description": "Show and handle alpha values in the input.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 74,
                  "column": 12
                },
                "end": {
                  "line": 77,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 84,
                  "column": 8
                },
                "end": {
                  "line": 90,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_updateInput",
              "description": "Update the input with the new `value`.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 96,
                  "column": 8
                },
                "end": {
                  "line": 102,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_updateColor",
              "description": "Update the `value` from the input.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 108,
                  "column": 8
                },
                "end": {
                  "line": 125,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 24,
              "column": 6
            },
            "end": {
              "line": 126,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.ColorPicker.ColorInputElement",
          "attributes": [
            {
              "name": "disable-alpha",
              "description": "Show and handle alpha values in the input.",
              "sourceRange": {
                "start": {
                  "line": 74,
                  "column": 12
                },
                "end": {
                  "line": 77,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "color-input",
          "mixins": [
            "Vaadin.ElementMixin",
            "Vaadin.ThemableMixin",
            "Vaadin.DisabledPropertyMixin",
            "Vaadin.ColorPicker.HasColorValueMixin"
          ]
        },
        {
          "description": "`<hex-input>` is an element that allows to input **hex** color codes.",
          "summary": "",
          "path": "src/input/color-picker-hex-input.html",
          "properties": [
            {
              "name": "_colorSupplier",
              "type": "Function | null | undefined",
              "description": "The supplier function that is called if one of the `_observedInputProperties` is\nchanged and the `value` property should be updated.\n\nShould return a valid [TinyColor](https://github.com/bgrins/TinyColor|TinyColor)\ncolor, e.g.:\n\n```() => tinycolor('rgb(255, 255, 255)')```",
              "privacy": "protected",
              "sourceRange": {
                "file": "color-picker-color-input.html",
                "start": {
                  "line": 48,
                  "column": 12
                },
                "end": {
                  "line": 48,
                  "column": 36
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Function"
                }
              },
              "inheritedFrom": "Vaadin.ColorPicker.ColorInputElement"
            },
            {
              "name": "_toInputConverter",
              "type": "Function | null | undefined",
              "description": "The converter function that is called if the `value` property changed and the inputs\nshould be updated.\n\nShould consume the [tinycolor](https://github.com/bgrins/TinyColor|TinyColor) `value`\nas an argument, e.g.:\n\n```value => console.info(value)```",
              "privacy": "protected",
              "sourceRange": {
                "file": "color-picker-color-input.html",
                "start": {
                  "line": 60,
                  "column": 12
                },
                "end": {
                  "line": 60,
                  "column": 39
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Function"
                }
              },
              "inheritedFrom": "Vaadin.ColorPicker.ColorInputElement"
            },
            {
              "name": "_observedInputProperties",
              "type": "Array | null | undefined",
              "description": "The properties that should trigger a call to `_colorSupplier` as the color has\nchanged from the input side.",
              "privacy": "protected",
              "sourceRange": {
                "file": "color-picker-color-input.html",
                "start": {
                  "line": 67,
                  "column": 12
                },
                "end": {
                  "line": 70,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Array"
                }
              },
              "defaultValue": "[]",
              "inheritedFrom": "Vaadin.ColorPicker.ColorInputElement"
            },
            {
              "name": "disableAlpha",
              "type": "boolean | null | undefined",
              "description": "Show and handle alpha values in the input.",
              "privacy": "public",
              "sourceRange": {
                "file": "color-picker-color-input.html",
                "start": {
                  "line": 74,
                  "column": 12
                },
                "end": {
                  "line": 77,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false",
              "inheritedFrom": "Vaadin.ColorPicker.ColorInputElement"
            },
            {
              "name": "hex",
              "type": "string | null | undefined",
              "description": "The color value as hex without the leading `#`.\nIncludes alpha value if enabled (e.g. `#FF00FF00`).",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 40,
                  "column": 12
                },
                "end": {
                  "line": 44,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "String"
                }
              },
              "defaultValue": "\"000000\""
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "color-picker-color-input.html",
                "start": {
                  "line": 84,
                  "column": 8
                },
                "end": {
                  "line": 90,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.ColorPicker.ColorInputElement"
            },
            {
              "name": "_updateInput",
              "description": "Update the input with the new `value`.",
              "privacy": "private",
              "sourceRange": {
                "file": "color-picker-color-input.html",
                "start": {
                  "line": 96,
                  "column": 8
                },
                "end": {
                  "line": 102,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.ColorPicker.ColorInputElement"
            },
            {
              "name": "_updateColor",
              "description": "Update the `value` from the input.",
              "privacy": "private",
              "sourceRange": {
                "file": "color-picker-color-input.html",
                "start": {
                  "line": 108,
                  "column": 8
                },
                "end": {
                  "line": 125,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.ColorPicker.ColorInputElement"
            },
            {
              "name": "_getPattern",
              "description": "Returns the input validation pattern.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 66,
                  "column": 8
                },
                "end": {
                  "line": 72,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "string",
                "desc": "The pattern depending on the setting of `disableAlpha`."
              }
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 24,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "Vaadin.ColorPicker.ColorInputElement",
          "name": "Vaadin.ColorPicker.HexInputElement",
          "attributes": [
            {
              "name": "disable-alpha",
              "description": "Show and handle alpha values in the input.",
              "sourceRange": {
                "file": "color-picker-color-input.html",
                "start": {
                  "line": 74,
                  "column": 12
                },
                "end": {
                  "line": 77,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined",
              "inheritedFrom": "Vaadin.ColorPicker.ColorInputElement"
            },
            {
              "name": "hex",
              "description": "The color value as hex without the leading `#`.\nIncludes alpha value if enabled (e.g. `#FF00FF00`).",
              "sourceRange": {
                "start": {
                  "line": 40,
                  "column": 12
                },
                "end": {
                  "line": 44,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string | null | undefined"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "hex-changed",
              "description": "Fired when the `hex` property changes.",
              "metadata": {}
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "hex-input"
        },
        {
          "description": "`<rgba-input>` is an element that allows to input **rgba** color codes.",
          "summary": "",
          "path": "src/input/color-picker-rgba-input.html",
          "properties": [
            {
              "name": "red",
              "type": "number | null | undefined",
              "description": "The current red value in the range `[0 - 255]`.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 62,
                  "column": 12
                },
                "end": {
                  "line": 66,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0"
            },
            {
              "name": "green",
              "type": "number | null | undefined",
              "description": "The current green value in the range `[0 - 255]`.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 70,
                  "column": 12
                },
                "end": {
                  "line": 74,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0"
            },
            {
              "name": "blue",
              "type": "number | null | undefined",
              "description": "The current blue value in the range `[0 - 255]`.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 78,
                  "column": 12
                },
                "end": {
                  "line": 82,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0"
            },
            {
              "name": "alpha",
              "type": "number | null | undefined",
              "description": "The current alpha in the range `[0 - 1]`.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 86,
                  "column": 12
                },
                "end": {
                  "line": 90,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            },
            {
              "name": "stepAlpha",
              "type": "number | null | undefined",
              "description": "Allowed number o intervals on the **alpha** value",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 94,
                  "column": 12
                },
                "end": {
                  "line": 97,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0.01"
            }
          ],
          "methods": [],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 46,
              "column": 6
            },
            "end": {
              "line": 130,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.ColorPicker.RgbaInputElement",
          "attributes": [
            {
              "name": "red",
              "description": "The current red value in the range `[0 - 255]`.",
              "sourceRange": {
                "start": {
                  "line": 62,
                  "column": 12
                },
                "end": {
                  "line": 66,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "green",
              "description": "The current green value in the range `[0 - 255]`.",
              "sourceRange": {
                "start": {
                  "line": 70,
                  "column": 12
                },
                "end": {
                  "line": 74,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "blue",
              "description": "The current blue value in the range `[0 - 255]`.",
              "sourceRange": {
                "start": {
                  "line": 78,
                  "column": 12
                },
                "end": {
                  "line": 82,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "alpha",
              "description": "The current alpha in the range `[0 - 1]`.",
              "sourceRange": {
                "start": {
                  "line": 86,
                  "column": 12
                },
                "end": {
                  "line": 90,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "step-alpha",
              "description": "Allowed number o intervals on the **alpha** value",
              "sourceRange": {
                "start": {
                  "line": 94,
                  "column": 12
                },
                "end": {
                  "line": 97,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "red-changed",
              "description": "Fired when the `red` property changes.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "green-changed",
              "description": "Fired when the `green` property changes.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "blue-changed",
              "description": "Fired when the `blue` property changes.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "alpha-changed",
              "description": "Fired when the `alpha` property changes.",
              "metadata": {}
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "rgba-input"
        },
        {
          "description": "`<hsla-input>` is an element that allows to input **hsla** color codes.",
          "summary": "",
          "path": "src/input/color-picker-hsla-input.html",
          "properties": [
            {
              "name": "hue",
              "type": "number | null | undefined",
              "description": "The current hue in the range `[0 - 360]`.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 70,
                  "column": 12
                },
                "end": {
                  "line": 74,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0"
            },
            {
              "name": "saturation",
              "type": "number | null | undefined",
              "description": "The current saturation in the range `[0 - 100]`.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 78,
                  "column": 12
                },
                "end": {
                  "line": 82,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Number"
                }
              },
              "defaultValue": "100"
            },
            {
              "name": "lightness",
              "type": "number | null | undefined",
              "description": "The current saturation in the range `[0 - 100]`.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 86,
                  "column": 12
                },
                "end": {
                  "line": 90,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Number"
                }
              },
              "defaultValue": "50"
            },
            {
              "name": "alpha",
              "type": "number | null | undefined",
              "description": "The current alpha in the range `[0 - 1]`.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 94,
                  "column": 12
                },
                "end": {
                  "line": 98,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            },
            {
              "name": "stepAlpha",
              "type": "number | null | undefined",
              "description": "Allowed number o intervals on the **alpha** value",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 102,
                  "column": 12
                },
                "end": {
                  "line": 105,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0.01"
            },
            {
              "name": "step",
              "type": "number | null | undefined",
              "description": "Allowed number o intervals on the **hsl** value",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 109,
                  "column": 12
                },
                "end": {
                  "line": 112,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            }
          ],
          "methods": [],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 6
            },
            "end": {
              "line": 145,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.ColorPicker.HslaInputElement",
          "attributes": [
            {
              "name": "hue",
              "description": "The current hue in the range `[0 - 360]`.",
              "sourceRange": {
                "start": {
                  "line": 70,
                  "column": 12
                },
                "end": {
                  "line": 74,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "saturation",
              "description": "The current saturation in the range `[0 - 100]`.",
              "sourceRange": {
                "start": {
                  "line": 78,
                  "column": 12
                },
                "end": {
                  "line": 82,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "lightness",
              "description": "The current saturation in the range `[0 - 100]`.",
              "sourceRange": {
                "start": {
                  "line": 86,
                  "column": 12
                },
                "end": {
                  "line": 90,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "alpha",
              "description": "The current alpha in the range `[0 - 1]`.",
              "sourceRange": {
                "start": {
                  "line": 94,
                  "column": 12
                },
                "end": {
                  "line": 98,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "step-alpha",
              "description": "Allowed number o intervals on the **alpha** value",
              "sourceRange": {
                "start": {
                  "line": 102,
                  "column": 12
                },
                "end": {
                  "line": 105,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "step",
              "description": "Allowed number o intervals on the **hsl** value",
              "sourceRange": {
                "start": {
                  "line": 109,
                  "column": 12
                },
                "end": {
                  "line": 112,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "hue-changed",
              "description": "Fired when the `hue` property changes.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "saturation-changed",
              "description": "Fired when the `saturation` property changes.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "lightness-changed",
              "description": "Fired when the `lightness` property changes.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "alpha-changed",
              "description": "Fired when the `alpha` property changes.",
              "metadata": {}
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "hsla-input"
        },
        {
          "description": "`<color-picker-input>` allows to select a color from different inputs:\n* HEX\n* RGBA\n* HSLA",
          "summary": "",
          "path": "src/input/color-picker-color-picker-input.html",
          "properties": [
            {
              "name": "pinned",
              "type": "boolean | null | undefined",
              "description": "Pin all inputs visible or show them in a carousel.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 69,
                  "column": 12
                },
                "end": {
                  "line": 72,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "disableHex",
              "type": "boolean | null | undefined",
              "description": "Disable the input of color in the **hex** format.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 76,
                  "column": 12
                },
                "end": {
                  "line": 79,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "disableRgb",
              "type": "boolean | null | undefined",
              "description": "Disable the input of color in the **rgb(a)** format.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 83,
                  "column": 12
                },
                "end": {
                  "line": 86,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "disableHsl",
              "type": "boolean | null | undefined",
              "description": "Disable the input of color in the **hsl(a)** format.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 90,
                  "column": 12
                },
                "end": {
                  "line": 93,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "disableAlpha",
              "type": "boolean | null | undefined",
              "description": "Disable the input of **alpha** values.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 97,
                  "column": 12
                },
                "end": {
                  "line": 100,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "stepAlpha",
              "type": "number | null | undefined",
              "description": "Allowed number o intervals on the **alpha** value",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 104,
                  "column": 12
                },
                "end": {
                  "line": 107,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0.01"
            },
            {
              "name": "stepHsl",
              "type": "number | null | undefined",
              "description": "Allowed number o intervals on the **hsl** value",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 111,
                  "column": 12
                },
                "end": {
                  "line": 114,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            },
            {
              "name": "lastUsedFormat",
              "type": "string | null | undefined",
              "description": "The format that was last modified.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 118,
                  "column": 12
                },
                "end": {
                  "line": 122,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "readOnly": true,
                  "attributeType": "String"
                }
              }
            },
            {
              "name": "_visibleInputIndex",
              "type": "number | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 123,
                  "column": 12
                },
                "end": {
                  "line": 126,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_onVisibleInputChanged\"",
                  "attributeType": "Number"
                }
              }
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 130,
                  "column": 8
                },
                "end": {
                  "line": 141,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_updateLastUsedFormat",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 143,
                  "column": 8
                },
                "end": {
                  "line": 147,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "format"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_onVisibleInputChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 149,
                  "column": 8
                },
                "end": {
                  "line": 151,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 53,
              "column": 6
            },
            "end": {
              "line": 152,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.ColorPicker.ColorPickerInputElement",
          "attributes": [
            {
              "name": "pinned",
              "description": "Pin all inputs visible or show them in a carousel.",
              "sourceRange": {
                "start": {
                  "line": 69,
                  "column": 12
                },
                "end": {
                  "line": 72,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "disable-hex",
              "description": "Disable the input of color in the **hex** format.",
              "sourceRange": {
                "start": {
                  "line": 76,
                  "column": 12
                },
                "end": {
                  "line": 79,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "disable-rgb",
              "description": "Disable the input of color in the **rgb(a)** format.",
              "sourceRange": {
                "start": {
                  "line": 83,
                  "column": 12
                },
                "end": {
                  "line": 86,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "disable-hsl",
              "description": "Disable the input of color in the **hsl(a)** format.",
              "sourceRange": {
                "start": {
                  "line": 90,
                  "column": 12
                },
                "end": {
                  "line": 93,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "disable-alpha",
              "description": "Disable the input of **alpha** values.",
              "sourceRange": {
                "start": {
                  "line": 97,
                  "column": 12
                },
                "end": {
                  "line": 100,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "step-alpha",
              "description": "Allowed number o intervals on the **alpha** value",
              "sourceRange": {
                "start": {
                  "line": 104,
                  "column": 12
                },
                "end": {
                  "line": 107,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "step-hsl",
              "description": "Allowed number o intervals on the **hsl** value",
              "sourceRange": {
                "start": {
                  "line": 111,
                  "column": 12
                },
                "end": {
                  "line": 114,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "last-used-format",
              "description": "The format that was last modified.",
              "sourceRange": {
                "start": {
                  "line": 118,
                  "column": 12
                },
                "end": {
                  "line": 122,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string | null | undefined"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "last-used-format-changed",
              "description": "Fired when the `lastUsedFormat` property changes.",
              "metadata": {}
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "color-picker-input",
          "mixins": [
            "Vaadin.ElementMixin",
            "Vaadin.ThemableMixin",
            "Vaadin.DisabledPropertyMixin",
            "Vaadin.ColorPicker.HasColorValueMixin"
          ]
        },
        {
          "description": "`<color-checkbox>` extends the `<vaadin-checkbox>` to be suitable for selecting colors.\nThe color of the checkmark itself will be adjusted automatically to be readable on the\nbackground color of the checkbox.",
          "summary": "",
          "path": "src/palette/color-picker-color-checkbox.html",
          "properties": [
            {
              "name": "color",
              "type": "Object | null | undefined",
              "description": "The color for the checkbox in the form of a\n[TinyColor](https://github.com/bgrins/TinyColor|TinyColor) color.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 36,
                  "column": 12
                },
                "end": {
                  "line": 39,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Object"
                }
              }
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 58,
                  "column": 8
                },
                "end": {
                  "line": 61,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_toggleChecked",
              "description": "Disable un-checking the checkbox once it has been checked.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 67,
                  "column": 8
                },
                "end": {
                  "line": 71,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_onColorChanged",
              "description": "Update the checkbox styles.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 77,
                  "column": 8
                },
                "end": {
                  "line": 90,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 20,
              "column": 6
            },
            "end": {
              "line": 91,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "Vaadin.CheckboxElement",
          "name": "Vaadin.ColorPicker.ColorCheckboxElement",
          "attributes": [
            {
              "name": "color",
              "description": "The color for the checkbox in the form of a\n[TinyColor](https://github.com/bgrins/TinyColor|TinyColor) color.",
              "sourceRange": {
                "start": {
                  "line": 36,
                  "column": 12
                },
                "end": {
                  "line": 39,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "Object | null | undefined"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "color-changed",
              "description": "Fired when the `color` property changes.",
              "metadata": {}
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "color-checkbox",
          "mixins": [
            "Vaadin.ElementMixin",
            "Vaadin.ThemableMixin",
            "Vaadin.DisabledPropertyMixin"
          ]
        },
        {
          "description": "`<color-palette>` shows a set of colors that can be selected.",
          "summary": "",
          "path": "src/palette/color-picker-color-palette.html",
          "properties": [
            {
              "name": "palette",
              "type": "Array | null | undefined",
              "description": "The palette of colors to show. Each color in the array should be a\n[TinyColor](https://github.com/bgrins/TinyColor|TinyColor) color.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 68,
                  "column": 12
                },
                "end": {
                  "line": 68,
                  "column": 26
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Array"
                }
              }
            }
          ],
          "methods": [
            {
              "name": "_setColorFromPalette",
              "description": "Set the current value.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 77,
                  "column": 8
                },
                "end": {
                  "line": 79,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e",
                  "description": "the click event"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_isSelected",
              "description": "Check if a the provided color is the current value.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 87,
                  "column": 8
                },
                "end": {
                  "line": 89,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "color"
                }
              ],
              "return": {
                "type": "boolean"
              }
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 6
            },
            "end": {
              "line": 90,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.ColorPicker.ColorPaletteElement",
          "attributes": [
            {
              "name": "palette",
              "description": "The palette of colors to show. Each color in the array should be a\n[TinyColor](https://github.com/bgrins/TinyColor|TinyColor) color.",
              "sourceRange": {
                "start": {
                  "line": 68,
                  "column": 12
                },
                "end": {
                  "line": 68,
                  "column": 26
                }
              },
              "metadata": {},
              "type": "Array | null | undefined"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "color-palette",
          "mixins": [
            "Vaadin.ElementMixin",
            "Vaadin.ThemableMixin",
            "Vaadin.DisabledPropertyMixin",
            "Vaadin.ColorPicker.HasColorValueMixin"
          ]
        },
        {
          "description": "`<color-picker-palette>` shows a set color palettes from which a color can be selected.",
          "summary": "",
          "path": "src/palette/color-picker-color-picker-palette.html",
          "properties": [
            {
              "name": "palettes",
              "type": "Array | null | undefined",
              "description": "The palettes to show whereas each palette should be an array of\n[TinyColor](https://github.com/bgrins/TinyColor|TinyColor) colors.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 58,
                  "column": 12
                },
                "end": {
                  "line": 58,
                  "column": 27
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Array"
                }
              }
            },
            {
              "name": "pinned",
              "type": "boolean | null | undefined",
              "description": "Pin all palettes visible or show them in a carousel.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 62,
                  "column": 12
                },
                "end": {
                  "line": 65,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            }
          ],
          "methods": [],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 6
            },
            "end": {
              "line": 68,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.ColorPicker.ColorPickerPaletteElement",
          "attributes": [
            {
              "name": "palettes",
              "description": "The palettes to show whereas each palette should be an array of\n[TinyColor](https://github.com/bgrins/TinyColor|TinyColor) colors.",
              "sourceRange": {
                "start": {
                  "line": 58,
                  "column": 12
                },
                "end": {
                  "line": 58,
                  "column": 27
                }
              },
              "metadata": {},
              "type": "Array | null | undefined"
            },
            {
              "name": "pinned",
              "description": "Pin all palettes visible or show them in a carousel.",
              "sourceRange": {
                "start": {
                  "line": 62,
                  "column": 12
                },
                "end": {
                  "line": 65,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "color-picker-palette",
          "mixins": [
            "Vaadin.ElementMixin",
            "Vaadin.ThemableMixin",
            "Vaadin.DisabledPropertyMixin",
            "Vaadin.ColorPicker.HasColorValueMixin"
          ]
        },
        {
          "description": "`<color-picker>` allows to select a color using sliders, inputs or palettes.\n\n```\n<color-picker></color-picker>\n```",
          "summary": "",
          "path": "src/color-picker.html",
          "properties": [
            {
              "name": "disableHex",
              "type": "boolean | null | undefined",
              "description": "Set to true to disable **hex** input.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 89,
                  "column": 12
                },
                "end": {
                  "line": 92,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "disableRgb",
              "type": "boolean | null | undefined",
              "description": "Set to true to disable **rgb** input.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 96,
                  "column": 12
                },
                "end": {
                  "line": 99,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "disableHsl",
              "type": "boolean | null | undefined",
              "description": "Set to true to disable **hsl** input.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 103,
                  "column": 12
                },
                "end": {
                  "line": 106,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "disableAlpha",
              "type": "boolean | null | undefined",
              "description": "Set to true to disable **alpha** input and **alpha** slider.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 110,
                  "column": 12
                },
                "end": {
                  "line": 113,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "pinnedInputs",
              "type": "boolean | null | undefined",
              "description": "Set to true to have all inputs visible all the time instead of having a switch button.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 117,
                  "column": 12
                },
                "end": {
                  "line": 120,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "pinnedPalettes",
              "type": "boolean | null | undefined",
              "description": "Set to true to have all palettes visible all the time instead of having a switch button.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 124,
                  "column": 12
                },
                "end": {
                  "line": 127,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "value",
              "type": "string | null | undefined",
              "description": "The color value as string. If the user switches the input or changes an input, the value will be\nformatted related to the input. Should be a valid CSS color code or CSS Custom Property.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 132,
                  "column": 12
                },
                "end": {
                  "line": 136,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_onValueChanged\"",
                  "attributeType": "String"
                }
              }
            },
            {
              "name": "previousValue",
              "type": "string | null | undefined",
              "description": "The value that should be used as previous value. Should be a valid CSS color code or CSS Custom Property.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 140,
                  "column": 12
                },
                "end": {
                  "line": 143,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_onPreviousValueChanged\"",
                  "attributeType": "String"
                }
              }
            },
            {
              "name": "lastUsedFormat",
              "type": "string | null | undefined",
              "description": "The format that the user used last as input or by switching inputs. One of `hex`,`rgb`,`hsl`.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 147,
                  "column": 12
                },
                "end": {
                  "line": 151,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_onValueInternalChanged\"",
                  "attributeType": "String"
                }
              }
            },
            {
              "name": "palettes",
              "type": "Array | null | undefined",
              "description": "The palettes to be shown. Should be an Array of Arrays, whereas the inner Arrays should contain valid\nCSS color codes or CSS Custom Properties.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 156,
                  "column": 12
                },
                "end": {
                  "line": 159,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_onPalettesChanged\"",
                  "attributeType": "Array"
                }
              }
            },
            {
              "name": "stepAlpha",
              "type": "number | null | undefined",
              "description": "The precision step to use for alpha values.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 163,
                  "column": 12
                },
                "end": {
                  "line": 166,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0.01"
            },
            {
              "name": "stepHsl",
              "type": "number | null | undefined",
              "description": "The precision step to use for hsl values.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 170,
                  "column": 12
                },
                "end": {
                  "line": 173,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            },
            {
              "name": "_valueInternal",
              "type": "Object | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 174,
                  "column": 12
                },
                "end": {
                  "line": 177,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_onValueInternalChanged\"",
                  "attributeType": "Object"
                }
              }
            },
            {
              "name": "_previousValueInternal",
              "type": "Object | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 178,
                  "column": 12
                },
                "end": {
                  "line": 178,
                  "column": 42
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Object"
                }
              }
            },
            {
              "name": "_palettesInternal",
              "type": "Array | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 179,
                  "column": 12
                },
                "end": {
                  "line": 182,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Array"
                }
              },
              "defaultValue": "[]"
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 186,
                  "column": 8
                },
                "end": {
                  "line": 193,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_showPalettes",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 195,
                  "column": 8
                },
                "end": {
                  "line": 197,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_showInputs",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 199,
                  "column": 8
                },
                "end": {
                  "line": 201,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_onValueChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 203,
                  "column": 8
                },
                "end": {
                  "line": 209,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_onValueInternalChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 211,
                  "column": 8
                },
                "end": {
                  "line": 220,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_onPreviousValueChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 222,
                  "column": 8
                },
                "end": {
                  "line": 224,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_onPalettesChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 226,
                  "column": 8
                },
                "end": {
                  "line": 230,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_getResolvedValue",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 232,
                  "column": 8
                },
                "end": {
                  "line": 239,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ]
            }
          ],
          "staticMethods": [],
          "demos": [
            {
              "url": "demo/index.html",
              "description": ""
            }
          ],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 240,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.ColorPicker.ColorPicker",
          "attributes": [
            {
              "name": "disable-hex",
              "description": "Set to true to disable **hex** input.",
              "sourceRange": {
                "start": {
                  "line": 89,
                  "column": 12
                },
                "end": {
                  "line": 92,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "disable-rgb",
              "description": "Set to true to disable **rgb** input.",
              "sourceRange": {
                "start": {
                  "line": 96,
                  "column": 12
                },
                "end": {
                  "line": 99,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "disable-hsl",
              "description": "Set to true to disable **hsl** input.",
              "sourceRange": {
                "start": {
                  "line": 103,
                  "column": 12
                },
                "end": {
                  "line": 106,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "disable-alpha",
              "description": "Set to true to disable **alpha** input and **alpha** slider.",
              "sourceRange": {
                "start": {
                  "line": 110,
                  "column": 12
                },
                "end": {
                  "line": 113,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "pinned-inputs",
              "description": "Set to true to have all inputs visible all the time instead of having a switch button.",
              "sourceRange": {
                "start": {
                  "line": 117,
                  "column": 12
                },
                "end": {
                  "line": 120,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "pinned-palettes",
              "description": "Set to true to have all palettes visible all the time instead of having a switch button.",
              "sourceRange": {
                "start": {
                  "line": 124,
                  "column": 12
                },
                "end": {
                  "line": 127,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "value",
              "description": "The color value as string. If the user switches the input or changes an input, the value will be\nformatted related to the input. Should be a valid CSS color code or CSS Custom Property.",
              "sourceRange": {
                "start": {
                  "line": 132,
                  "column": 12
                },
                "end": {
                  "line": 136,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string | null | undefined"
            },
            {
              "name": "previous-value",
              "description": "The value that should be used as previous value. Should be a valid CSS color code or CSS Custom Property.",
              "sourceRange": {
                "start": {
                  "line": 140,
                  "column": 12
                },
                "end": {
                  "line": 143,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string | null | undefined"
            },
            {
              "name": "last-used-format",
              "description": "The format that the user used last as input or by switching inputs. One of `hex`,`rgb`,`hsl`.",
              "sourceRange": {
                "start": {
                  "line": 147,
                  "column": 12
                },
                "end": {
                  "line": 151,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string | null | undefined"
            },
            {
              "name": "palettes",
              "description": "The palettes to be shown. Should be an Array of Arrays, whereas the inner Arrays should contain valid\nCSS color codes or CSS Custom Properties.",
              "sourceRange": {
                "start": {
                  "line": 156,
                  "column": 12
                },
                "end": {
                  "line": 159,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "Array | null | undefined"
            },
            {
              "name": "step-alpha",
              "description": "The precision step to use for alpha values.",
              "sourceRange": {
                "start": {
                  "line": 163,
                  "column": 12
                },
                "end": {
                  "line": 166,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "step-hsl",
              "description": "The precision step to use for hsl values.",
              "sourceRange": {
                "start": {
                  "line": 170,
                  "column": 12
                },
                "end": {
                  "line": 173,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "value-changed",
              "description": "Fired when the `value` property changes.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "last-used-format-changed",
              "description": "Fired when the `lastUsedFormat` property changes.",
              "metadata": {}
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "color-picker",
          "mixins": [
            "Vaadin.ElementMixin",
            "Vaadin.ThemableMixin",
            "Vaadin.DisabledPropertyMixin"
          ]
        }
      ]
    }
  ],
  "classes": [
    {
      "description": "",
      "summary": "",
      "path": "src/utils/vaadin-disabled-property-mixin.html",
      "properties": [],
      "methods": [
        {
          "name": "attributeChangedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 17,
              "column": 6
            },
            "end": {
              "line": 22,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "oldValue"
            },
            {
              "name": "newValue"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 7,
          "column": 18
        },
        "end": {
          "line": 23,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "superClass",
      "name": "VaadinDisabledPropertyMixin"
    },
    {
      "description": "eslint-disable-next-line no-unused-vars",
      "summary": "",
      "path": "src/utils/color-picker-utils.html",
      "properties": [],
      "methods": [],
      "staticMethods": [
        {
          "name": "roundToNearest",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 5,
              "column": 6
            },
            "end": {
              "line": 8,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "nearest"
            }
          ]
        },
        {
          "name": "limit",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 10,
              "column": 6
            },
            "end": {
              "line": 13,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "min"
            },
            {
              "name": "max"
            }
          ]
        },
        {
          "name": "conditionallySetAttribute",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 15,
              "column": 6
            },
            "end": {
              "line": 21,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element"
            },
            {
              "name": "condition"
            },
            {
              "name": "attr"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "getContrastColor",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 23,
              "column": 6
            },
            "end": {
              "line": 32,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "color"
            }
          ]
        },
        {
          "name": "getFormattedColor",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 6
            },
            "end": {
              "line": 45,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "color"
            },
            {
              "name": "format"
            },
            {
              "name": "stepAlpha"
            },
            {
              "name": "step"
            }
          ]
        }
      ],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 3,
          "column": 4
        },
        "end": {
          "line": 46,
          "column": 5
        }
      },
      "privacy": "public",
      "name": "ColorPickerUtils"
    },
    {
      "description": "",
      "summary": "",
      "path": "src/utils/color-picker-has-color-value-mixin.html",
      "properties": [],
      "methods": [],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 8,
          "column": 18
        },
        "end": {
          "line": 23,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "superClass",
      "name": "HasColorValueMixin"
    }
  ]
}
